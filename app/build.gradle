apply from: '../versions.gradle'
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

// For databinding error logs reporting
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"

    configurations.all {
        resolutionStrategy {
            force 'com.google.code.findbugs:jsr305:1.3.9'
        }
    }

    dexOptions {
        maxProcessCount 2
    }

    defaultConfig {
        applicationId "com.kenshin.mcassigment.mastercardinterviewassignment"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        resConfig("en")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {

                includeCompileClasspath false

                arguments = [
                        //Issue warnings instead of compiler errors.
                        'com.groupon.android.dichecks.duplicateCheck.failOnError': 'true',
                        //Enable or disable check completely.
                        'com.groupon.android.dichecks.duplicateCheck.enabled'    : 'true',
                        "room.schemaLocation"                                    : "$projectDir/schemas".toString()
                ]
            }
        }

    }

    buildTypes {

        debug {
            applicationIdSuffix '.debug'
            shrinkResources false
            minifyEnabled true
            useProguard false
            debuggable true
            aaptOptions.cruncherEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'shrinker-rules.pro'
        }

        release {
            shrinkResources true
            minifyEnabled true
            useProguard true
            debuggable false
            aaptOptions.cruncherEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/rxjava.properties'
    }

}

dependencies {
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    implementation "com.google.dagger:dagger:$dagger2Version"
    implementation "com.google.dagger:dagger-android:$dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$dagger2Version"

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2Version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2Version"

    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support:design:$supportLibrary"
    implementation "com.android.support:cardview-v7:$supportLibrary"
    implementation "com.android.support:recyclerview-v7:$supportLibrary"
    implementation "com.android.support:support-annotations:$supportLibrary"

    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support.constraint:constraint-layout-solver:$constraintLayoutVersion"

    implementation "com.evernote:android-state:$stateSaverVersion"
    annotationProcessor "com.evernote:android-state-processor:$stateSaverVersion"

    implementation "android.arch.lifecycle:runtime:$androidArchComponentsLifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$androidArchComponentsVersion"
    implementation "android.arch.lifecycle:common-java8:$androidArchComponentsVersion"


    implementation "android.arch.persistence.room:runtime:$androidArchComponentsVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$androidArchComponentsVersion"
    testImplementation "android.arch.persistence.room:testing:$androidArchComponentsVersion"
    implementation "android.arch.persistence.room:rxjava2:$androidArchComponentsVersion"

    //Debug and Testing Lib versions
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "junit:junit:$junitVersion"

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunner"
    androidTestImplementation "com.android.support.test:rules:$testRunner"
    androidTestImplementation "com.android.support.test.uiautomator:uiautomator-v18:$testUiAutomatorVersion"

    androidTestImplementation "com.android.support:support-annotations:$supportLibrary"

    debugImplementation "com.facebook.stetho:stetho:$stethoVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
//    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
//    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // RxJava Libraries
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid2Version"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava2Version"

    implementation "com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:$rxBinding"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:$rxBinding"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$rxBinding"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:$rxBinding"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxBinding"

    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxLifecycle2Version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$rxLifecycle2Version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifecycle2Version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:$rxLifecycle2Version"

    implementation "com.jakewharton.rxrelay2:rxrelay:$rxRelay2Version"

    // Networking libraries
    implementation "com.squareup.retrofit2:retrofit:$retroFit2Version"
    implementation "com.squareup.retrofit2:converter-gson:$retroFit2Version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retroFit2Version"

    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"

    implementation "com.squareup.okio:okio:$okioVersion"

    // JSON Mapping libraries
    implementation "com.google.code.gson:gson:$gsonVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glideVersion") {
        exclude group: 'glide-parent'
//        transitive = false
    }

//    implementation "com.github.bumptech.glide:okhttp3-integration:$glideVersion@aar"

    annotationProcessor "com.groupon.android.dichecks:compiler:1.0.2"

}

tasks.withType(com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask) { task ->
    if (task.name.endsWith("AndroidTest")) {
        task.finalizedBy(tasks.create("${task.name}Workaround") << {
            task.output.deleteDir()
        })
    }
}